# This is a basic workflow that is manually triggered

name: "[Dev] Server Deploy"

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Deploy to Server"
        # Default value if no value is explicitly provided
        default: ""
        # Input has to be provided for the workflow to run
        required: false
  push: # auto run on main branch push
    branches:
      - dev
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow deploys via ssh to our servers
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          ref: dev
      - name: ssh deploy
        # You may pin to the exact commit or the version.
        # uses: easingthemes/ssh-deploy@c711f2c3391cac2876bf4c833590077f02e4bcb8
        uses: easingthemes/ssh-deploy@v2.2.11
        with:
          # Private Key
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # Remote host
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST_DEV }}
          # Remote user
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER_DEV }}
          # Remote port
          #REMOTE_PORT: ${{ secrets.SSH_REMOTE_PORT }}  # optional, default is 22
          # Source directory
          #SOURCE: ${{ secrets.SSH_DIR_SOURCE }}  # optional, default is
          # Target directory
          TARGET: ${{ secrets.SSH_DIR_TARGET_DEV }} # optional, default is /home/REMOTE_USER/
          # Arguments to pass to rsync
          #ARGS: -rltgoDzvO # optional, default is -rltgoDzvO
          # An array of folder to exclude
          EXCLUDE: ${{ secrets.SSH_DIR_EXCLUDES }} # optional, default is
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_REMOTE_HOST_DEV }}
          username: ${{ secrets.SSH_REMOTE_USER_DEV }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_DIR_TARGET_DEV}}
            npm install
            npm run build
            pm2 start dev-${{ secrets.APP_NAME }}
